package com.bwei.recyclerviews.activity;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.StaggeredGridLayoutManager;
import android.widget.Toast;

import com.bwei.recyclerviews.R;
import com.bwei.recyclerviews.adapter.MyAdapter;
import com.bwei.recyclerviews.utils.OkHttp3Utils;
import com.bwei.recyclerviews.view.MyDecoration;
import com.bwei.recyclerviews.view.MyItemAnimator;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.Response;

public class MainActivity extends AppCompatActivity {

    private RecyclerView rv;
    private String url = "http://result.eolinker.com/iYXEPGn4e9c6dafce6e5cdd23287d2bb136ee7e9194d3e9?uri=one";
    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case 0:
                    String json = (String) msg.obj;
                    try {
                        final JSONObject jsonObject = new JSONObject(json);
                        final JSONArray data = jsonObject.getJSONArray("data");
                        //设置适配器
                        adapter = new MyAdapter(MainActivity.this, data);
                        rv.setAdapter(adapter);

                        //通过适配器回调监听
                        adapter.setOnRrecyclerViewItemClickListener(new MyAdapter.OnRrecyclerViewItemClickListener() {
                            @Override
                            public void onRecyclerViewItemClick(int position) {
                                Toast.makeText(MainActivity.this, "点击条目：" + position, Toast.LENGTH_SHORT).show();
                                //创建动画
                                final MyItemAnimator animator = new MyItemAnimator();
                                animator.setAddDuration(2000);
                               /* try {
                                    JSONObject jo = data.getJSONObject(position);
                                    adapter.addData(position, jo);

                                } catch (JSONException e) {
                                    e.printStackTrace();
                                }*/
                                //animator.setRemoveDuration(1000);
                                //添加动画
                                rv.setItemAnimator(animator);
                            }
                        });
                        adapter.setOnRecyclerViewLongItemClickListener(new MyAdapter.OnRecyclerViewLongItemClickListener() {
                            @Override
                            public void onRecyclerViewLongItemClick(int position) {
                                Toast.makeText(MainActivity.this, "长按条目：" + position, Toast.LENGTH_SHORT).show();

                            }
                        });
                    } catch (JSONException e) {
                        e.printStackTrace();
                    }
                    break;
            }
        }
    };
    private MyAdapter adapter;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        //找控件
        rv = (RecyclerView) findViewById(R.id.rv);
        //获取数据
        getData();


        //设置LinearLayoutManager布局管理器
        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);
        //设置GridLayoutManager布局管理器
        GridLayoutManager gridLayoutManager = new GridLayoutManager(this, 2);

        //设置StaggeredGridLayoutManager布局管理器
        StaggeredGridLayoutManager staggeredGridLayoutManager = new StaggeredGridLayoutManager(2, StaggeredGridLayoutManager.VERTICAL);

        //把布局管理器给RecyclerView
        rv.setLayoutManager(linearLayoutManager);
        //添加华丽分割线
        MyDecoration decoration = new MyDecoration(this, LinearLayoutManager.VERTICAL);
        rv.addItemDecoration(decoration);
        //给表格添加华丽的分割线
       /* GridDivider gridDivider = new GridDivider(this, 2, Color.BLUE);
        rv.setLayoutManager(gridLayoutManager);
        rv.addItemDecoration(gridDivider);*/


    }

    private void getData() {
        OkHttp3Utils.doGet(url, new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {

            }

            @Override
            public void onResponse(Call call, Response response) throws IOException {
                String json = response.body().string();
                Message message = handler.obtainMessage(0, json);
                message.sendToTarget();
            }
        });

    }
}
